import 'package:dio/dio.dart' as dio;
import 'dart:core';

class Autogenerated {
  int? status;
  Data? data;

  Autogenerated({this.status, this.data});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    status = json['status'];
    data = json['data'] != null ? new Data.fromJson(json['data']) : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['status'] = this.status;
    if (this.data != null) {
      data['data'] = this.data!.toJson();
    }
    return data;
  }
}

class Data {
  List<Orders>? orders;

  Data({this.orders});

  Data.fromJson(Map<String, dynamic> json) {
    if (json['orders'] != null) {
      orders = <Orders>[];
      json['orders'].forEach((v) {
        orders!.add(new Orders.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.orders != null) {
      data['orders'] = this.orders!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

Future<List<Orders>> getOrdersList() async {
  var response = await dio.Dio().get(
    "http://msocial-ecommerce.shivinfotechsolution.in/api/v1/orders",
    options: dio.Options(
      headers: {
        "Content-Type": "application/json",
        "Accept": "*/*",
        "Authorization":
            "eyJpdiI6ImdtSHgxRUlrdXBUZ0RHSTRVZGdnUEE9PSIsInZhbHVlIjoicForQ0xRbzhzaG0vVlVPbHM5cTVETkdJSFBBNjEzQnNaaHAxV2JDUmpMR0w0WVgybnRlZ2lhTENwM0JGZWorQVF1WjU5dWNqUHFvRG9UcFk4ZThpSXc9PSIsIm1hYyI6ImNhOGIwZDJjOWIzYjI5MjRkYzY3YTMxOGEyYTQxMDU2YzY5YjFjY2FjNWUwNmE0NjU0OGExZjc5MmE5NDJkODQiLCJ0YWciOiIifQ",
      },
    ),
  );
  if (response.statusCode == 200) {
    print(response.data["data"]);
    List<dynamic> jsonResponse = response.data["data"]["orders"];
    print(jsonResponse[0]);
    List<Orders> productsList =
        jsonResponse.map((cartJson) => Orders.fromJson(cartJson)).toList();
    return productsList;
  } else {
    throw Exception('Failed to load items');
  }
}

class Orders {
  String? id;
  String? orderDate;
  List<OrderProducts>? orderProducts;

  Orders({this.id, this.orderDate, this.orderProducts});

  Orders.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    orderDate = json['orderDate'];
    if (json['orderProducts'] != null) {
      orderProducts = <OrderProducts>[];
      json['orderProducts'].forEach((v) {
        orderProducts!.add(new OrderProducts.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['orderDate'] = this.orderDate;
    if (this.orderProducts != null) {
      data['orderProducts'] =
          this.orderProducts!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}



class OrderProducts {
  String? productName;
  String? colorName;
  String? sizeName;
  String? image;
  String? status;
  String? statusString;

  OrderProducts(
      {this.productName,
      this.colorName,
      this.sizeName,
      this.image,
      this.status,
      this.statusString});

  OrderProducts.fromJson(Map<String, dynamic> json) {
    productName = json['productName'];
    colorName = json['colorName'];
    sizeName = json['sizeName'];
    image = json['image'];
    status = json['status'];
    statusString = json['statusString'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['productName'] = this.productName;
    data['colorName'] = this.colorName;
    data['sizeName'] = this.sizeName;
    data['image'] = this.image;
    data['status'] = this.status;
    data['statusString'] = this.statusString;
    return data;
  }
}
